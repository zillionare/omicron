[[tool.poetry.source]]
name = "ali"
url = "https://mirrors.aliyun.com/pypi/simple/"
secondary = true


[tool.poetry.dev-dependencies]
[tool.poetry]
name = "zillionare-omicron"
packages = [
    {include = "omicron"}
]
version = "2.0.0a44"
description = "Core Library for Zillionare"
authors = ["jieyu <code@jieyu.ai>"]
license = "MIT"
readme = "README.md"
homepage = "https://zillionare-omicron.readthedocs.io"
repository = "https://github.com/zillionare/omicron"
documentation = "https://zillionare-omicron.readthedocs.io"
keywords = ["AI", "quant", "trade", "stock"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.8",
]
include = [
    "LICENSE",
    "README.md",
    "HISTORY.md",
    "AUTHORS.md",
    "docs/*",
    "tests/*"
]

[tool.poetry.dependencies]
python = ">=3.8,<3.9"
sh = "1.14.1"
aiohttp = ">=3.8.0"
cfg4py = ">=0.9"
numpy = "^1.22"
aioredis = "1.3.1"
aiosmtplib = "^1.1.6"
pandas = "^1.3.5"
zillionare-core-types = "^0.5.2"
ciso8601 = "^2.2.0"
Bottleneck = "^1.3.4"
scikit-learn = "^1.0.2"
empyrical-reloaded = "^0.5.8"
zigzag = "^0.3"



black = {version = "^22.3.0", optional = true}
isort  = { version = "5.10.1", optional = true}
flake8  = { version = "4.0.1", optional = true}
flake8-docstrings = { version = "^1.6.0", optional = true }
pytest  = { version = "^7.0.1", optional = true}
pytest-cov  = { version = "^3.0.0", optional = true}
tox  = { version = "^3.24.5", optional = true}
pip  = { version = "^22.0.3", optional = true}
psutil  = { version = "^5.7.3", optional = true}

mkdocs  = { version = "^1.3.0", optional = true}
mkdocs-include-markdown-plugin  = { version = "^3.2.3", optional = true}
mkdocs-material  = { version = "^8.1.11", optional = true}
mkdocstrings  = { version = "^0.18.0", optional = true}
mkdocs-material-extensions  = { version = "^1.0.3", optional = true}
twine  = { version = "^3.8.0", optional = true}
mkdocs-autorefs = {version = "^0.3.1", optional = true}
pre-commit = {version = "^2.17.0", optional = true}
toml = {version = "^0.10.2", optional = true}
livereload = {version = "^2.6.3", optional = true}
pyreadline = {version = "^2.1", optional = true}
mike = { version="^1.1.2", optional=true}
freezegun = {version = "^1.2.1", optional = true}
httpx = "^0.23.0"
deprecation = "^2.1.0"
arrow = "^1.2"

[tool.poetry.extras]
test = [
    "pytest",
    "black",
    "isort",
    "flake8",
    "flake8-docstrings",
    "pytest-cov",
    "psutil",
    "freezegun"
    ]

dev = ["tox", "pre-commit", "pip", "twine", "toml"]

doc = [
    "mkdocs",
    "mkdocs-include-markdown-plugin",
    "mkdocs-material",
    "mkdocstrings",
    "mkdocs-material-extension",
    "mkdocs-autorefs",
    "Jinja2",
    "livereload",
    "mike"
    ]
[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | \.history
  | _build
  | buck-out
  | build
  | dist
)/
'''
[tool.isort]
profile = "black"
