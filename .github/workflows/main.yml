# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, main, release ]
  pull_request:
    branches: [ master, main, release ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test:
    # The type of runner that the job will run on
    strategy:
      matrix:
        python-versions: [3.8, 3.9]
        os: [ubuntu-18.04, ubuntu-20.04]
    runs-on: ${{ matrix.os }}

    services:
      redis:
        images: redis
        options: >-
          -- health-cmd "redis-cli ping"
          -- health-interval 10s
          -- health-timeout 5s
          -- health-retries 5
        ports:
          - 6379:6379
        
      postgres:
        image: postgres
        env: # this is defined by image postgres
          POSTGRES_PASSWORD: 123456
          POSTGRES_USER: zillionare
          POSTGRES_DB: zillionare
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-versions }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions poetry

      - name: init POSTGRES db
        run: |
            export TZ=Asia/Shanghai
            apt-get update
            apt-get install --yes --no-install-recommends postgresql-client wget
            wget https://raw.githubusercontent.com/zillionare/omega/release/omega/config/sql/init.sql -O init.sql
            PGPASSWORD=$POSTGRES_PASSWORD psql -U zillionare -h localhost --dbname=zillionare --file=init.sql
      - name: test with tox
        run:
          tox
      - name: list files
        run: ls -l .
          
      - name: pre-publish documentation
        run: |
          python -m pip install -e .[doc]
          mkdocs build

      - name: publish documentation
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.PERSONAL_TOKEN }}
          publish_dir: ./site

      - uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
          files: coverage.xml
      - name: Build wheels and source tarball
        run: >-
          poetry build

      - name: publish to Test PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN}}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true
          
      - name: Publish distribution to PyPI only on release branch when tagged
        if: startsWith(github.ref, 'refs/tags') && github.ref == 'refs/heads/release'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip_existing: true
