# Publish package on release branch if it's tagged with 'v*'

name: build & release

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branch: [main, master]
    tags:
      - 'v*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  release:
    name: Create Release
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        python-versions: [3.8]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: build change log
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v3.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-versions }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox-gh-actions poetry

      # declare env.package_version, env.package_version, env.package_name, env.repo_owner, env.repo_name, so you may use it in web hooks.
      - name: Declare variables for convenient use
        run: |
          echo "package_version=`poetry version --short`" >> $GITHUB_ENV
          echo "package_name=`poetry version | awk '{print $1}'`" >> $GITHUB_ENV
          echo "repo_owner=${GITHUB_REPOSITORY%/*}" >> $GITHUB_ENV
          echo "repo_name=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
        shell: bash

      - name: publish documentation
        run: |
          poetry install -E doc
          poetry run mkdocs build
          git config --global user.name Docs deploy
          git config --global user.email docs@dummy.bot.com
          poetry run mike deploy -p -f --ignore `poetry version --short`
          poetry run mike set-default -p `poetry version --short`

      - name: Build wheels and source tarball
        run: >-
          poetry build

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ${{ steps.build_changelog.outputs.changelog }}
          draft: false
          prerelease: false

      - name: publish to PYPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip_existing: true

      - name: build notification
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.BUILD_NOTIFY_MAIL_SERVER }}
          server_port: ${{ secrets.BUILD_NOTIFY_MAIL_PORT }}
          username: ${{ secrets.BUILD_NOTIFY_MAIL_FROM }}
          password: ${{ secrets.BUILD_NOTIFY_MAIL_PASSWORD }}
          from: build-bot
          to: ${{ secrets.BUILD_NOTIFY_MAIL_RCPT }}
          subject: ${{ env.package_name }}.${{ env.package_version}} build success
          body: |
            Change History:  https://${{ env.repo_owner }}.github.io/${{ env.repo_name }}/history
            Package Download: https://pypi.org/project/${{ env.package_name }}/


      - name: Dingtalk Robot Notify
        if: always()
        uses: leafney/dingtalk-action@v1.0.0
        env:
          DINGTALK_ACCESS_TOKEN: ${{ secrets.DINGTALK_ACCESS_TOKEN }}
          DINGTALK_SECRET: ${{ secrets.DINGTALK_SECRET }}
        with:
          msgtype: markdown
          title: CI Notification | Success
          text: |
            ### Build Success
            ${{ env.package_version_full }} is built and published to test pypi
            ### Change History
            Please check change history at https://${{ env.repo_owner }}.github.io/${{ env.repo_name }}/history
            ### Package Download
            Please download the package at: https://pypi.org/project/${{ env.repo_name }}/
