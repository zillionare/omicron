[tox]
envlist = py38, lint
isolated_build = True

[gh-actions]
python =
    3.8: py38

[testenv:lint]
whitelist_externals =
    isort
    black
    flake8
    doc8
    poetry
    mkdocs
    twine
extras =
    doc
    dev
    test
commands =
    isort omicron
    black omicron tests
    flake8 omicron tests
    doc8 --ignore D001 docs
    poetry build
    mkdocs build
    twine check dist/*

[testenv:py38]
whitelist_externals =
    pytest
    /bin/sh
    poetry
    rm
    pip
deps =
    cython
    numpy
extras =
    test
passenv = *
setenv =
    PYTHONPATH = {toxinidir}
    PYTHONWARNINGS = ignore
    __cfg4py_server_role__=DEV
    TZ=Asia/Shanghai
    REDIS_HOST=127.0.0.1
    REDIS_PORT=6379
    POSTGRES_USER=zillionare
    POSTGRES_PASSWORD=123456
    POSTGRES_HOST=127.0.0.1
    POSTGRES_PORT=5432
    POSTGRES_DB=zillionare
    POSTGRES_ENABLED=True
    INFLUXDB_HOST=localhost
    INFLUXDB_PORT=8086
    INFLUXDB_TOKEN=my-token
    INFLUXDB_ORG=my-org
    INFLUXDB_BUCKET_NAME=my-bucket
    MINIO_HOST=localhost
    MINIO_PORT=9000
    MINIO_ACCESS=minioadmin
    MINIO_SECRET=minioadmin

commands =
    rm -rf dist
    poetry build
    /bin/sh ./stop_service.sh
    /bin/sh ./start_service.sh
    pytest --cov=omicron --cov-report=term-missing --cov-report=xml --doctest-modules tests/core tests/dal tests/models tests/extensions tests/notify tests/talib
    /bin/sh -c 'for file in `find omicron -name *.py`;do python -m doctest $file;done'
