[tox]
envlist = py38, lint
isolated_build = True

[gh-actions]
python =
    3.8: py38

[testenv:lint]
skip_install = true
whitelist_externals =
    rm
deps =
    pip
    poetry
commands =
    rm -f {toxinidir}/dist/*
    poetry build
    pip install numpy>=1.22
    pip install Cython>=0.29.28
    /bin/sh -c "pip install `ls {toxinidir}/dist/*.whl`"
    poetry run isort omicron
    poetry run black omicron tests
    poetry run flake8 omicron
    poetry run doc8 --ignore D001 docs
    poetry run mkdocs build
    poetry run twine check dist/*

[testenv]
whitelist_externals =
    rm
skip_install = true
passenv = *
setenv =
    PYTHONPATH = {toxinidir}
    PYTHONWARNINGS = ignore
    __cfg4py_server_role__=DEV

    REDIS_HOST=127.0.0.1
    REDIS_PORT=6379
    INFLUXDB_HOST=localhost
    INFLUXDB_PORT=8086
    INFLUXDB_TOKEN=my-token
    INFLUXDB_ORG=my-org
    INFLUXDB_BUCKET_NAME=my-bucket
    MINIO_HOST=localhost
    MINIO_PORT=9000
    MINIO_ACCESS=minioadmin
    MINIO_SECRET=minioadmin

deps =
    pip
    poetry
commands =
    pip install numpy>=1.22
    pip install Cython>=0.29.28
    rm -f {toxinidir}/dist/*
    poetry build

    /bin/sh -c "pip install `ls {toxinidir}/dist/*.whl`"
    /bin/sh ./stop_service.sh
    /bin/sh ./start_service.sh
    poetry run pytest --cov=omicron --cov-report=term-missing --cov-report=xml --doctest-modules tests/core tests/dal tests/models tests/extensions tests/notify tests/talib
    /bin/sh -c 'for file in `find omicron -name *.py`;do python -m doctest $file;done'
